[
    {
        "description": "Search for available buses with valid data.",
        "expected_result": [
            "App successfully transitions to results page displaying a list of matching buses with details.",
            "Details include: departure/arrival times, operator, price, and seat availability.",
            "Sorting or filtering options for the results are provided (if applicable)."
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "Active internet connection is available.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Enter a valid source city.",
            "Enter a valid destination city.",
            "Select a valid date (within the allowed booking window).",
            "Tap the 'SEARCH' button."
        ]
    },
    {
        "description": "Attempt a search with an empty source field.",
        "expected_result": [
            "App displays an error message indicating that the source city is required.",
            "The error message is clear, concise, and user-friendly.",
            "The search is not initiated.",
            "The user remains on the search screen to correct the input"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Leave the source city field empty.",
            "Enter a valid destination city.",
            "Select a valid date.",
            "Tap the 'SEARCH' button."
        ]
    },
    {
        "description": "Attempt a search with an empty destination field.",
        "expected_result": [
            "App displays an error message indicating that the destination city is required.",
            "The error message is clear and user-friendly.",
            "The search is not initiated.",
            "The user remains on the search screen to correct the input"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Enter a valid source city.",
            "Leave the destination city field empty.",
            "Select a valid date.",
            "Tap the 'SEARCH' button."
        ]
    },
    {
        "description": "Attempt search with the same city for source and destination.",
        "expected_result": [
            "App displays a user-friendly message indicating that the source and destination cities cannot be the same.",
            "Alternatively, the app offers options like 'Airport Transfer' or 'Local Sightseeing' within the same city.",
            "The user is provided with clear instructions to proceed"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Enter the same city in both the source and destination fields.",
            "Select a valid date.",
            "Tap the 'SEARCH' button."
        ]
    },
    {
        "description": "Search with a past date outside the booking window.",
        "expected_result": [
            "App displays an error message indicating that the selected date is invalid.",
            "The message clarifies that booking is only allowed within a specific date range (e.g., 'You can book tickets up to 6 months in advance').",
            "The date field is not updated, and the user remains on the search screen"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Select a date that is before the allowed booking window.",
            "Enter valid source and destination cities.",
            "Tap the 'SEARCH' button."
        ]
    },
    {
        "description": "Test the 'TODAY' shortcut in the date picker.",
        "expected_result": [
            "The date field is automatically populated with the current date.",
            "The app allows a search using the current date if it's within the booking window.",
            "If today's date is outside the booking window, the app handles it gracefully (as per the past date test case)"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Tap on the date field to open the date picker (if applicable).",
            "Tap on the 'TODAY' shortcut."
        ]
    },
    {
        "description": "Test the 'TOMORROW' shortcut in the date picker.",
        "expected_result": [
            "The date field is automatically filled with the date following the current date.",
            "The app allows the search with tomorrow's date if it falls within the allowed booking window.",
            "If tomorrow's date is outside the booking window, the app handles it gracefully"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Tap on the date field to open the date picker (if applicable).",
            "Tap on the 'TOMORROW' shortcut."
        ]
    },
    {
        "description": "Swap cities with both source and destination fields filled.",
        "expected_result": [
            "The values in the source and destination fields are instantly swapped.",
            "No other data on the screen is changed or cleared"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Enter a valid source city.",
            "Enter a different valid destination city.",
            "Tap on the swap icon (usually double arrows) between the source and destination fields."
        ]
    },
    {
        "description": "Attempt to swap with an empty source field.",
        "expected_result": [
            "Nothing happens, or the app provides subtle feedback (like a brief animation or a tooltip) to indicate that both fields must have values for swapping.",
            "No errors are displayed.",
            "The user remains on the search screen"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Leave the source city field empty.",
            "Enter a valid destination city.",
            "Tap on the swap icon."
        ]
    },
    {
        "description": "Attempt to swap with an empty destination field.",
        "expected_result": [
            "Nothing happens, or the app provides subtle feedback indicating that both fields must have values for swapping.",
            "No errors are displayed.",
            "The user remains on the search screen"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Enter a valid source city.",
            "Leave the destination city field empty.",
            "Tap on the swap icon."
        ]
    },
    {
        "description": "View recent searches with a history of searches.",
        "expected_result": [
            "The 'RECENT SEARCHES' section displays a list of previous searches.",
            "The list shows both the source-destination pairs and the dates of the searches.",
            "Recent searches are displayed in reverse chronological order (most recent at the top).",
            "Optionally, tapping on a recent search entry repopulates the search fields"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user has previously performed at least one bus search.",
            "The user is on the main search screen of the app"
        ],
        "testing_steps": [
            "Scroll down to the 'RECENT SEARCHES' section (if it's not already visible)."
        ]
    },
    {
        "description": "View recent searches with no past searches.",
        "expected_result": [
            "The 'RECENT SEARCHES' section displays a message indicating that there are no recent searches.",
            "The message is user-friendly and encourages the user to perform a search.",
            "For example: 'No recent searches yet. Find your next bus trip!'"
        ],
        "pre_conditions": [
            "App is installed and launched for the first time.",
            "The user has not performed any searches yet.",
            "The user is on the main search screen of the app"
        ],
        "testing_steps": [
            "Scroll down to the 'RECENT SEARCHES' section."
        ]
    },
    {
        "description": "Navigate to 'Bus Hire' option.",
        "expected_result": [
            "The app navigates to a dedicated 'Bus Hire' section or screen.",
            "The 'Bus Hire' section contains relevant fields for booking a bus hire, such as date, time, pick-up/drop-off locations, and type of bus.",
            "User interface should be clear and easy to understand"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user is on the main search screen of the app"
        ],
        "testing_steps": [
            "Locate the 'YOU CAN ALSO BOOK' section.",
            "Tap on the 'Bus Hire' option (icon or label)."
        ]
    },
    {
        "description": "Navigate to 'rPool' option.",
        "expected_result": [
            "The app transitions to a dedicated 'rPool' or 'Ride Sharing' section or screen.",
            "The section contains relevant fields for booking or joining ride pools, such as date, time, pick-up/drop-off points.",
            "The user interface is clear and easy to navigate for booking or joining rides"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user is on the main search screen of the app"
        ],
        "testing_steps": [
            "Locate the 'YOU CAN ALSO BOOK' section.",
            "Tap on the 'rPool' option (icon or label)."
        ]
    },
    {
        "description": "Test the app in landscape mode.",
        "expected_result": [
            "The app UI adapts correctly to landscape orientation.",
            "All elements are displayed correctly, and no text is truncated or overlapping.",
            "Functionality remains consistent in both orientations"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user is on any screen of the app"
        ],
        "testing_steps": [
            "Rotate the device from portrait to landscape mode."
        ]
    },
    {
        "description": "Test the app with a slow or intermittent network connection.",
        "expected_result": [
            "The app displays a loading indicator while attempting to fetch data.",
            "If the data fetch takes too long due to the slow connection, the app displays a user-friendly error message.",
            "The error message suggests checking the network connection or trying again later.",
            "The app does not crash or freeze"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user is attempting to perform an action that requires internet access (e.g., searching for buses, loading recent searches)."
        ],
        "testing_steps": [
            "Turn on a slow or unstable network connection (or use a network simulator).",
            "Attempt to perform an action that requires internet access."
        ]
    },
    {
        "description": "Test the app's response to server errors.",
        "expected_result": [
            "The app displays a generic but user-friendly error message (e.g., 'Something went wrong. Please try again later.')",
            "Avoid displaying technical error codes to the user.",
            "Provide the user with an option to retry the action or refresh the data"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user is attempting to perform an action that involves server communication (like searching for buses)."
        ],
        "testing_steps": [
            "Simulate server errors (e.g., 500 Internal Server Error, timeout) - this may require backend coordination."
        ]
    },
    {
        "description": "Test city input fields with special characters and long names.",
        "expected_result": [
            "The app accepts and processes city names with apostrophes, hyphens, spaces, and other special characters (e.g., St. Louis, Port-au-Prince).",
            "The input field handles very long city names (e.g., 50+ characters) gracefully, either by truncating the display or allowing scrolling within the field.",
            "No errors are thrown due to special characters or long names"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on the main search screen of the app"
        ],
        "testing_steps": [
            "Enter city names containing special characters (e.g., '-, ', &).",
            "Enter city names that are significantly long."
        ]
    },
    {
        "description": "Test the maximum number of recent searches stored.",
        "expected_result": [
            "Determine if there's a limit to how many recent searches the app stores.",
            "If there is a limit, test what happens when the limit is reached.",
            "Does the app start removing the oldest searches to make room for new ones?",
            "Is there a user notification about the limit?"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "The user is on the main search screen of the app"
        ],
        "testing_steps": [
            "Perform a large number of unique searches to exceed the expected storage limit (if any).",
            "Observe how recent searches are displayed and managed."
        ]
    },
    {
        "description": "Test the app with large font size accessibility settings.",
        "expected_result": [
            "The app's text and layout adjust to accommodate larger font sizes.",
            "Text does not overlap or get cut off.",
            "The user interface remains usable and accessible with larger text"
        ],
        "pre_conditions": [
            "App is installed and launched.",
            "User is on any screen of the app"
        ],
        "testing_steps": [
            "Go to device settings and increase the font size to a large setting.",
            "Open the app and check all screens for text readability and layout adjustments."
        ]
    }
]